# Generated by Django 3.2.12 on 2022-09-07 03:57

import activatedapp.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlRajhiPaymentPageURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('amount', models.FloatField(default=0.0, verbose_name='قيمة المبلغ المدفوع')),
                ('pay_via_wallet', models.BooleanField(default=False, verbose_name='إكمال الدفع عبر المحفظة')),
                ('mode', models.CharField(choices=[('production', 'مرحلة النشر'), ('development', 'مرحلة التطوير')], max_length=20, verbose_name='نوع العملية')),
                ('page_id', models.CharField(editable=False, error_messages={'unique': 'رقم عملية الدفع موجد مسبقاً.'}, max_length=255, unique=True, verbose_name='رقم عملية الدفع')),
                ('track_id', models.CharField(editable=False, error_messages={'unique': 'رقم عملية الدفع موجد مسبقاً.'}, max_length=255, unique=True, verbose_name='رقم تتبع الدفع')),
                ('page_url', models.URLField(verbose_name='رابط عملية الدفع')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'صفحة الدفع للراجحي',
                'verbose_name_plural': 'صفحة الدفع للراجحي',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='AlRajhiProvider',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('purchase', 'شراء'), ('refund', 'إعادة')], default='purchase', max_length=10, verbose_name='نوع العملية')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ')),
                ('currency', models.CharField(max_length=20, verbose_name='العملة')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('track_id', models.CharField(editable=False, max_length=255, verbose_name='رقم تتبع الدفع')),
                ('tran_id', models.CharField(editable=False, max_length=255, verbose_name='رقم تتبع الدفع')),
                ('payment_id', models.CharField(error_messages={'unique': 'رقم عملية الدفع موجد مسبقاً.'}, max_length=255, unique=True, verbose_name='رقم عملية الدفع')),
                ('trandata', models.TextField(verbose_name='البيانات المرسلة')),
                ('result', models.CharField(max_length=100, verbose_name='الناتج')),
            ],
            options={
                'verbose_name': 'الراجحي',
                'verbose_name_plural': 'الراجحي',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AlRajhiWithWalletProvider',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('purchase', 'شراء'), ('refund', 'إعادة')], default='purchase', max_length=10, verbose_name='نوع العملية')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ')),
                ('currency', models.CharField(max_length=20, verbose_name='العملة')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('track_id', models.CharField(editable=False, max_length=255, verbose_name='رقم تتبع الدفع')),
                ('tran_id', models.CharField(editable=False, max_length=255, verbose_name='رقم تتبع الدفع')),
                ('payment_id', models.CharField(error_messages={'unique': 'رقم عملية الدفع موجد مسبقاً.'}, max_length=255, unique=True, verbose_name='رقم عملية الدفع')),
                ('trandata', models.TextField(verbose_name='البيانات المرسلة')),
                ('result', models.CharField(max_length=100, verbose_name='الناتج')),
                ('alrajhi_amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ من الراجحي')),
                ('wallet_amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ من المحفظة')),
            ],
            options={
                'verbose_name': 'الدفع عبر الراجحي والمحفظة',
                'verbose_name_plural': 'الدفع عبر الراجحي والمحفظة',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'العميل',
                'verbose_name_plural': 'العملاء',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('price', models.FloatField(verbose_name='السعر')),
                ('discount', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة التخفيض')),
                ('tax', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة الضريبة')),
                ('annual_figure', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='الرقم السنوي')),
                ('type', models.CharField(choices=[('sales', 'فاتورة مبيعات'), ('returned', 'فاتورة مرتجع')], default='sales', max_length=20, verbose_name='نوع الفاتورة')),
                ('vendor', models.CharField(max_length=255, verbose_name='إسم البائع')),
                ('customer', models.CharField(max_length=255, verbose_name='إسم المشتري')),
                ('status', models.CharField(choices=[('pending', 'في انتظار دفع الفاتورة'), ('completed', 'تم دفع الفاتورة'), ('canceled', 'تم إلغاء الفاتورة')], default='pending', max_length=20, verbose_name='حالة الفاتورة')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'الفاتورة',
                'verbose_name_plural': 'الفواتير',
                'ordering': ['-created_date'],
            },
            managers=[
                ('verified_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='السعر')),
                ('discount', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة التخفيض')),
                ('tax', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة الضريبة')),
                ('sales', models.CharField(max_length=255, verbose_name='إسم المنتج')),
                ('employee', models.CharField(blank=True, max_length=255, null=True, verbose_name='إسم الموظف')),
                ('date', models.DateField(blank=True, null=True, verbose_name='تاريخ بداية الحجز')),
                ('start', models.TimeField(blank=True, null=True, verbose_name='تاريخ نهاية الحجز')),
                ('end', models.TimeField(blank=True, null=True, verbose_name='تاريخ نهاية الحجز')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100000)], verbose_name='الكمية')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'عنصر الفاتورة',
                'verbose_name_plural': 'عناصر الفاتورة',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'في الانتظار'), ('approval', 'تم قبول الطلب'), ('disapproval', 'تم رفض الطلب'), ('payment', 'تم الدفع'), ('completed', 'اكتمال المعالجة')], default='pending', max_length=20, verbose_name='حالة الطلب')),
                ('payment_type', models.CharField(choices=[('system', 'الدفع من خلال النظام'), ('vendor', 'الدفع من خلال البائع')], default='system', max_length=20, verbose_name='نوع الدفع')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ إرسال الطلب')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل على الطلب')),
            ],
            options={
                'verbose_name': 'الطلب',
                'verbose_name_plural': 'الطلبات',
                'ordering': ['-created_date'],
            },
            managers=[
                ('verified_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='السعر')),
                ('discount', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة التخفيض')),
                ('tax', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة الضريبة')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100000)], verbose_name='الكمية')),
                ('date', models.DateField(blank=True, null=True, verbose_name='تاريخ يوم الحجز')),
                ('start', models.TimeField(blank=True, null=True, verbose_name='وقت بداية الحجز')),
                ('end', models.TimeField(blank=True, null=True, verbose_name='وقت نهاية الحجز')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'عنصر الطلب',
                'verbose_name_plural': 'عناصر الطلب',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveBigIntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'الدفع',
                'verbose_name_plural': 'الدفع',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('date', models.DateField(verbose_name='تاريخ يوم الحجز')),
                ('start', models.TimeField(verbose_name='وقت بداية الحجز')),
                ('end', models.TimeField(verbose_name='وقت نهاية الحجز')),
            ],
            options={
                'verbose_name': 'تفاصيل الحجز',
                'verbose_name_plural': 'تفاصيل الحجز',
                'ordering': ['-date', 'start', 'end'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('balance', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ')),
                ('last_operation', models.DateTimeField(null=True, verbose_name='تاريخ اخر عملية')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to='customerapp.customer')),
            ],
            options={
                'verbose_name': 'المحفظة',
                'verbose_name_plural': 'المحفظة',
                'ordering': ['-created_date'],
            },
            managers=[
                ('wallet_objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='الكمية')),
                ('type', models.CharField(choices=[('withdrawal', 'سحب'), ('deposit', 'إيداع')], max_length=10, verbose_name='نوع العملية')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_transaction', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transaction', to='customerapp.wallet')),
            ],
            options={
                'verbose_name': 'المحفظة',
                'verbose_name_plural': 'المحفظة',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WalletProvider',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('purchase', 'شراء'), ('refund', 'إعادة')], default='purchase', max_length=10, verbose_name='نوع العملية')),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='المبلغ')),
                ('currency', models.CharField(max_length=20, verbose_name='العملة')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('wallet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_provider', to='customerapp.wallet')),
            ],
            options={
                'verbose_name': 'المحفظة',
                'verbose_name_plural': 'المحفظة',
                'ordering': ['-created_date'],
            },
        ),
    ]
