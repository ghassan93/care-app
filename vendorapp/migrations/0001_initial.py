# Generated by Django 3.2.12 on 2022-09-07 03:57

import activatedapp.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_resized.forms
import mptt.fields
import re
import sort_order_field.fields
import taggit.managers
import utils.upload


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('adminapp', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='تاريخ يوم الدوام')),
                ('start', models.TimeField(verbose_name='وقت بداية الدوام')),
                ('end', models.TimeField(verbose_name='وقت نهاية الدوام')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف الدوام')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'تفاصيل الدوام',
                'verbose_name_plural': 'تفاصيل الدوام',
                'ordering': ['-date', 'start', 'end'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=255, verbose_name='إسم حساب البنك')),
                ('account_number', models.CharField(max_length=255, verbose_name='رقم الحساب البنكي')),
                ('branch_code', models.CharField(max_length=255, verbose_name='رقم الفرع')),
                ('iban_number', models.CharField(max_length=255, verbose_name='رقم الحساب المصرفي الدولي آيبان')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'الحساب البنكي',
                'verbose_name_plural': 'الحساب البنكي',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('tag_type', models.CharField(blank=True, choices=[('self-care', 'العناية بالجمال'), ('car-care', 'العناية بالسيارة')], max_length=20, null=True, verbose_name='نوع الفئة')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
            ],
            options={
                'verbose_name': 'الفئة',
                'verbose_name_plural': 'الفئات',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorapp_taggeditem_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorapp_taggeditem_items', to='vendorapp.tag')),
            ],
            options={
                'verbose_name': 'Tagged Item',
                'verbose_name_plural': 'Tagged Items',
                'index_together': {('content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('name', models.CharField(max_length=255, verbose_name='الاسم التجاري')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')], verbose_name='الرابط')),
                ('vendor_type', models.CharField(choices=[('self-care', 'العناية بالجمال'), ('car-care', 'العناية بالسيارة')], max_length=20, verbose_name='نوع البائع')),
                ('place', models.CharField(choices=[('home', 'المنزل'), ('shop', 'المحل'), ('all', 'كليهما')], default='shop', max_length=20, verbose_name='محل البيع')),
                ('sort_order', sort_order_field.fields.SortOrderField(db_index=True, default=100, validators=[django.core.validators.MinValueValidator(0)], verbose_name='ترتيب البائع')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='الحي')),
                ('location', models.TextField(blank=True, null=True, verbose_name='الموقع')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='خط العرض')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='خط الطول')),
                ('time_from', models.TimeField(null=True, verbose_name='وقت بداية الدوام')),
                ('time_to', models.TimeField(null=True, verbose_name='وقت نهاية الدوام')),
                ('rate', models.FloatField(default=4.5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='التقييم')),
                ('cr_no', models.PositiveBigIntegerField(verbose_name='رقم السجل التجاري')),
                ('cr_file', models.FileField(blank=True, null=True, upload_to=utils.upload.file_folder, validators=[django.core.validators.FileExtensionValidator(['pdf', 'docx', 'doc', 'png', 'jpg'])], verbose_name='ملف السجل التجاري')),
                ('payment_type', models.CharField(choices=[('system', 'الدفع من خلال النظام'), ('vendor', 'الدفع من خلال البائع')], default='system', max_length=20, verbose_name='نوع الدفع')),
                ('allowed', models.CharField(choices=[('males', 'ذكور'), ('females', 'إناث'), ('all', 'الكل')], default='all', max_length=8, verbose_name='مسموح لكل من')),
                ('website', models.URLField(blank=True, null=True, verbose_name='عنوان موقع الويب')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف البائع')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor', to='adminapp.city')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='vendorapp.vendor')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='vendorapp.TaggedItem', to='vendorapp.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'البائع',
                'verbose_name_plural': 'البائعين',
                'ordering': ['sort_order', '-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='المبلغ المطلوب')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('status', models.CharField(choices=[('pending', 'في الانتظار'), ('cancel', 'إلغاء الطلب'), ('arrival', 'تم الدفع')], default='pending', max_length=20, verbose_name='حالة الطلب')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdraw_request', to='vendorapp.bankaccount')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdraw_request', to='vendorapp.vendor')),
            ],
            options={
                'verbose_name': 'طلبات العملاء',
                'verbose_name_plural': 'طلبات العملاء',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='VendorUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_manager', models.BooleanField(default=False, verbose_name='مدير')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_user', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_user', to='vendorapp.vendor')),
            ],
            options={
                'verbose_name': 'المستخدمين للبائعين',
                'verbose_name_plural': 'المستخدمين للبائعين',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('price', models.FloatField(verbose_name='السعر')),
                ('discount', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة التخفيض')),
                ('tax', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة الضريبة')),
                ('name', models.CharField(max_length=255, verbose_name='إسم الخدمة')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')], verbose_name='الرابط')),
                ('description', models.TextField(blank=True, null=True, verbose_name='الوصف')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('hour', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], verbose_name='أجمالي الخدمة بالساعات')),
                ('minute', models.IntegerField(choices=[(0, 0), (15, 15), (30, 30), (45, 45)], verbose_name='أجمالي الخدمة بالدقائق')),
                ('type', models.CharField(choices=[('self-care', 'العناية بالجمال'), ('car-care', 'العناية بالسيارة')], max_length=20, verbose_name='نوع الخدمة')),
                ('place', models.CharField(choices=[('home', 'المنزل'), ('shop', 'المتجر')], default='shop', max_length=20, verbose_name='مكان الخدمة')),
                ('schedule', models.CharField(choices=[('default', 'افتراضية'), ('unscheduled', 'غير مجدولة')], default='default', max_length=20, verbose_name='نوع الجدولة')),
                ('image_file', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=70, size=[1920, 1080], upload_to=utils.upload.image_folder, verbose_name='صورة العرض')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='vendorapp.TaggedItem', to='vendorapp.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'الخدمة',
                'verbose_name_plural': 'الخدمات',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['service', 'product']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='vendorapp.vendor')),
            ],
            options={
                'verbose_name': 'المبيعات',
                'verbose_name_plural': 'المبيعات',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('price', models.FloatField(verbose_name='السعر')),
                ('discount', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة التخفيض')),
                ('tax', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='نسبة الضريبة')),
                ('name', models.CharField(max_length=255, verbose_name='إسم الخدمة')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')], verbose_name='الرابط')),
                ('description', models.TextField(blank=True, null=True, verbose_name='الوصف')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='الماركة')),
                ('wight', models.FloatField(default=0, verbose_name='الوزن')),
                ('specification', models.TextField(blank=True, null=True, verbose_name='التخصص')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='vendorapp.service')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='vendorapp.TaggedItem', to='vendorapp.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'المنتج',
                'verbose_name_plural': 'المنتجات',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('discount', models.FloatField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='قيمة التخفيض')),
                ('code', models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(message='يجب أن  يكون الكود مزيجًا من الأحرف الأبجدية والأرقام', regex='^([a-zA-Z]+|[a-zA-Z]+\\d+|\\d+[a-zA-Z]+)+$'), django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(12)], verbose_name='كود الخصم')),
                ('type', models.CharField(choices=[('vendor', 'البائع'), ('admin', 'النظام')], max_length=20, verbose_name='نوع الخصم')),
                ('uses', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='عدد الاستخدامات')),
                ('expire_date', models.DateField(verbose_name='تاريخ الانتهاء')),
                ('is_active', models.BooleanField(default=False, verbose_name='تم التفعيل')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer', to='vendorapp.vendor')),
            ],
            options={
                'verbose_name': 'أكواد الخصم',
                'verbose_name_plural': 'أكواد الخصم',
                'ordering': ['-id'],
            },
            managers=[
                ('offer_objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='إسم الموظف')),
                ('image_file', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=70, size=[1920, 1080], upload_to=utils.upload.image_folder, verbose_name='صورة العرض')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('service', models.ManyToManyField(through='vendorapp.Availability', to='vendorapp.Service')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='vendorapp.vendor')),
            ],
            options={
                'verbose_name': 'الموظف',
                'verbose_name_plural': 'الموظفين',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='التقييم')),
                ('content', models.TextField(blank=True, null=True, verbose_name='محتوى التعليق')),
                ('object_id', models.PositiveBigIntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='vendorapp.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'التعليقات',
                'verbose_name_plural': 'التعليقات',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='متاح')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='تاريخ التفعيل')),
                ('disabled_at', models.DateTimeField(null=True, verbose_name='تاريخ إلغاء التفعيل')),
                ('banner_type', models.CharField(choices=[('self-care', 'العناية بالجمال'), ('car-care', 'العناية بالسيارة')], max_length=20, null=True, verbose_name='نوع اللافتة')),
                ('subject', models.CharField(blank=True, max_length=155, verbose_name='عنوان اللافتة')),
                ('body', models.CharField(blank=True, max_length=255, verbose_name='موضوع اللافتة')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=100, size=[1920, 1080], upload_to=utils.upload.image_folder)),
                ('sort_order', sort_order_field.fields.SortOrderField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='الترتيب')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('vendors', models.ManyToManyField(to='vendorapp.Vendor')),
            ],
            options={
                'verbose_name': 'اللافتات',
                'verbose_name_plural': 'اللافتات',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('activated', activatedapp.models.ActivatedManager()),
                ('archived', activatedapp.models.ArchivedManager()),
            ],
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_account', to='vendorapp.vendor'),
        ),
        migrations.AddField(
            model_name='availability',
            name='employee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='vendorapp.employee'),
        ),
        migrations.AddField(
            model_name='availability',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='vendorapp.service'),
        ),
    ]
